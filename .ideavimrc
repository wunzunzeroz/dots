"" .ideavimrc - Matt Chapman


"" Base Settings
"" ========================================================

set scrolloff=10
set number
set relativenumber
set showmode
set showcmd

set smartcase
set incsearch
set hlsearch

set visualbell

" Use system clipboard
set clipboard+=unnamed   

let mapleader = " "


"" Plugin Settings
"" ========================================================

set surround
set highlightedyank
set sneak
set nerdtree

" Easymotion settings
set easymotion
set notimeout

" Which-key settings
set which-key
let g:WhichKey_FontSize = 16
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_firstËœ"

let g:WhichKeyDesc_leader = "<leader> Leader key"

let g:WhichKeyDesc_leader = "<leader>x Open file explorer"
let g:WhichKeyDesc_open = "<leader>o Open filE"

let g:WhichKeyDesc_easymotion = "<leader>j Jump with Easymotion"
let g:WhichKeyDesc_easymotion_prefix = "<leader><leader>"

let g:WhichKeyDesc_comment = "<leader>/ Comment line"
let g:WhichKeyDesc_prettify = "<leader>p Prettify code (using Prettier)"
let g:WhichKeyDesc_bookmark = "<leader>b Toggle bookmark"

let g:WhichKeyDesc_context = "<leader>c Contexts"
let g:WhichKeyDesc_context_load = "<leader>cl Load Context"
let g:WhichKeyDesc_context_save = "<leader>cs Save Context"

let g:WhichKeyDesc_fold = "<leader>z Folding"
let g:WhichKeyDesc_fold_all = "<leader>zc Fold all regions"
let g:WhichKeyDesc_unfold_all = "<leader>zo Unfold all regions"
let g:WhichKeyDesc_fold_a = "<leader>zh Fold all to level 1"
let g:WhichKeyDesc_fold_b = "<leader>zj Fold all to level 2"
let g:WhichKeyDesc_fold_c = "<leader>zk Fold all to level 3"

let g:WhichKeyDesc_window = "<leader>w Window splits"
let g:WhichKeyDesc_window_split_vertically = "<leader>wv Split vertically"
let g:WhichKeyDesc_window_split_horizontally = "<leader>wh Split horizontally"
let g:WhichKeyDesc_window_split_unsplit = "<leader>wu Unsplit"
let g:WhichKeyDesc_window_split_move_editor = "<leader>wm Move editor to opposite tab group"

let g:WhichKeyDesc_debug = "<leader>d Debugging"
let g:WhichKeyDesc_debug_continue = "<leader>dc Continue"
let g:WhichKeyDesc_debug_restart = "<leader>dr Continue"

let g:WhichKeyDesc_action= "<leader>a Actions"
let g:WhichKeyDesc_action_context_menu = "<leader>am Open context menu"
let g:WhichKeyDesc_action_search = "<leader>as Open command modal"

let g:WhichKeyDesc_file_quickLook = "<leader><leader> Recent files"

let g:WhichKeyDesc_file_nav = "<leader>f File navigation"
let g:WhichKeyDesc_file_nav_goto_file = "<leader>ff Go to file"
let g:WhichKeyDesc_file_nav_goto_class = "<leader>fc Go to class"
let g:WhichKeyDesc_file_nav_goto_member = "<leader>fs Go to member in file"
let g:WhichKeyDesc_file_nav_goto_text = "<leader>ft Search for text"
let g:WhichKeyDesc_file_nav_goto_files = "<leader>fp Find in files"
let g:WhichKeyDesc_file_nav_new_scratch = "<leader>fn New scratch file"
let g:WhichKeyDesc_file_nav_next_occurence = "<leader>fo Next occurence"
let g:WhichKeyDesc_file_nav_prev_occurence = "<leader>fO Prev occurence"
let g:WhichKeyDesc_file_nav_show_recent_files = "<leader>fr Show recent files"
let g:WhichKeyDesc_file_nav_show_recent_locations = "<leader>fl Show recent locations"

let g:WhichKeyDesc_close_tab = "<leader>q Close active tab"

let g:WhichKeyDesc_refactoring = "<leader>r Refactoring menu"
let g:WhichKeyDesc_refactoring_rename = "<leader>rn Rename element"
let g:WhichKeyDesc_refactoring_method = "<leader>rm Extract method"
let g:WhichKeyDesc_refactoring_variable = "<leader>rv Introduce variable"
let g:WhichKeyDesc_refactoring_field = "<leader>rf Introduce field"
let g:WhichKeyDesc_refactoring_signature = "<leader>rs Change signature"
let g:WhichKeyDesc_refactoring_all = "<leader>rr Open refactorings list"

let g:WhichKeyDesc_goto = "<leader>g Go to X"
let g:WhichKeyDesc_goto_declaration = "<leader>gd Go to Definition"
let g:WhichKeyDesc_goto_type_declaration = "<leader>gy Go to Type Definition"
let g:WhichKeyDesc_goto_implementation = "<leader>gi Go to Implementation"
let g:WhichKeyDesc_goto_usages = "<leader>gu Go to Usages"
let g:WhichKeyDesc_goto_test = "<leader>gt Go to Test"
let g:WhichKeyDesc_goto_back = "<leader>gb Go Back"
let g:WhichKeyDesc_goto_forward = "<leader>gf Go Forward"

let g:WhichKeyDesc_git = "<leader>g Git operations"
let g:WhichKeyDesc_git_commit = "<leader>gc Open Git commit dialog"
let g:WhichKeyDesc_git_status = "<leader>gs Open Git status dialog"
let g:WhichKeyDesc_git_branches = "<leader>gb Open Git branches list"

let g:WhichKeyDesc_errors = "<leader>e Error navigation"
let g:WhichKeyDesc_errors_next = "<leader>en Go to next error in solution"
let g:WhichKeyDesc_errors_prev = "<leader>ep Go to previous error in solution"

let g:WhichKeyDesc_tests = "<leader>t Test runner"
let g:WhichKeyDesc_run_test = "<leader>tr Run test underneath cursor"

let g:WhichKeyDesc_lang = "<leader>l Language Specific Features"
let g:WhichKeyDesc_lang_flutter = "<leader>lf Flutter actions"
let g:WhichKeyDesc_lang_flutter_extract_widget = "<leader>lfw Extract widget"
let g:WhichKeyDesc_lang_flutter_extract_widget = "<leader>lfr Hot Reload"

"" Key mappings
"" ========================================================

inoremap jk <Esc>

" Tab navigation
nnoremap <A-n> :tabnext<CR>
nnoremap <A-p> :tabprev<CR>

" Pane navigation
nnoremap <A-h> <C-w>h
nnoremap <A-l> <C-w>l
nnoremap <A-k> <C-w>k
nnoremap <A-j> <C-w>j

" Jump between methods
nnoremap [[ <Action>(MethodUp)
nnoremap ]] <Action>(MethodDown)

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv

" Execute macro saved in 'q' register
nnoremap Q @q

" Popup navigation
inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)


"" Leader commands
"" ========================================================

" Comment lines
map <leader>/<action>(CommentByLineComment)

" Prettify code
map <leader>p <action>(ReformatWithPrettierAction)

" Toggle bookmark
map <leader>b <action>(ToggleBookmark)
" Jump around with easymotion
map <leader>j <Plug>(easymotion-s)

" Open NERDTree (use q to exit)
map <leader>x :NERDTreeToggle<CR>

" Contexts
map <leader>cs <Action>(context.save)
map <leader>cl <Action>(context.load)

" Folding
map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>
map <leader>zh <Action>(ExpandAllToLevel1)
map <leader>zj <Action>(ExpandAllToLevel2)
map <leader>zk <Action>(ExpandAllToLevel3)

" Window splits
map <leader>wv <Action>(SplitVertically)
map <leader>ws <Action>(SplitHorizontally)
map <leader>wu <Action>(Unsplit)
map <leader>wm <Action>(MoveEditorToOppositeTabGroup)

" Display options
"map <leader>dd <action>(ToggleDistractionFreeMode)
"map <leader>dz <action>(ToggleZenMode)
"map <leader>df <action>(ToggleFullScreen)

" Debugging
map <leader>dc <action>(Resume)
map <leader>dr <action>(Rerun)

" Actions
map <leader>am <action>(ShowIntentionActions)
map <leader>as <action>(SearchEverywhere)

" File navigation
map <leader>ff <action>(GotoFile)
map <leader>fr <action>(RecentFiles)
map <leader>fs <action>(FileStructurePopup)
map <leader>fc <action>(GotoClass)
map <leader>ft <action>(TextSearchAction)
map <leader>fp <action>(FindInPath)
map <leader><leader> <Action>(RecentFiles)
map <leader>fl <action>(RecentLocations)
map <leader>fn <action>(NewScratchFile)
map <leader>fo <action>(NextOccurence)
map <leader>fO <action>(PreviousOccurence)


" Close active tab
map <leader>q <action>(CloseContent)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

" Go to code
nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>gf <Action>(Back)
nmap <leader>gb <Action>(Forward)

" Git windows
map <leader>gc <Action>(CheckinProject)
map <leader>gs <Action>(ActivateVersionControlToolWindow)
map <leader>gb <Action>(Git.Branches)

" Errors
map <leader>en <Action>(ReSharperGotoNextErrorInSolution)
map <leader>ep <Action>(ReSharperGotoPrevErrorInSolution)

" Tests
map <leader>tr <Action>(RiderUnitTestRunContextAction)

" Flutter Specific
map <leader>lfw <Action>(Flutter.ExtractWidget)
map <leader>lfr <Action>(Flutter.Toolbar.ReloadAction)

" IDE Actions
map <leader>o <Action>(OpenFile)
